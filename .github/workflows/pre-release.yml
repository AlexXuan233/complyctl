name: Pre-release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  # packages: write
  # issues: write
  # id-token: write

jobs:
  release:
    name: Create Pre-release
    runs-on: ubuntu-latest

    steps:

      # Prepare token
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          # required
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
      - run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all commits and tags

      - name: Determine tag
        id: determine-tag
        run: |
          describe="$(git describe --match 'v[0-9]*' --exclude 'v*-*' --tags 2>/dev/null || true)"
          if [[ -z "$describe" ]]; then
            describe=v0.0.0-0-g0
          fi
          ver="${describe%%-*}"
          snap="${describe#*-}"
          new_tag="$ver-snap.$snap"
          echo "ver=$ver" >>"$GITHUB_OUTPUT"
          echo "snap=$snap" >>"$GITHUB_OUTPUT"
          echo "new_tag=$new_tag" >>"$GITHUB_OUTPUT"
          git tag -a "$new_tag" -m "$new_tag"
          git push origin "$new_tag"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Update to the desired Go version, or "stable"

      - name: Prepare prerelease config
        # goreleaser only supports includes for paid version
        run: |
          cp -v .goreleaser.yaml /tmp/
          echo >>/tmp/.goreleaser.yaml
          echo >>/tmp/.goreleaser.yaml 'release:'
          echo >>/tmp/.goreleaser.yaml '  prerelease: true'
          echo
          cat /tmp/.goreleaser.yaml

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2.4.8'
          args: --verbose release --skip=announce,validate --clean --config /tmp/.goreleaser.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.determine-tag.outputs.new_tag }}
          release_name: ${{ steps.determine-tag.outputs.new_tag }}

